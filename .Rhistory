profvis({
highest_temp <-  c()
record_temp <-  c()
for(i in 1:nrow(datafr)){
highest_temp <- max(highest_temp, datafr$temp[i])
record_temp[i] <- datafr$temp[i] >= threshold & datafr$temp[i] >= highest_temp
}
datafr <- cbind(datafr, record_temp)
})
datafr <- chicagoNMMAPS
library(dlnm)
data("chicagoNMMAPS")
datafr <- chicagoNMMAPS
threshold <- 27
profvis({
highest_temp <-  c()
record_temp <-  c()
for(i in 1:nrow(datafr)){
highest_temp <- max(highest_temp, datafr$temp[i])
record_temp[i] <- datafr$temp[i] >= threshold & datafr$temp[i] >= highest_temp
}
datafr <- cbind(datafr, record_temp)
})
library(dlnm)
data("chicagoNMMAPS")
datafr <- chicagoNMMAPS
install.packages("dlnm")
library(profvis)
library(dlnm)
data("chicagoNMMAPS")
datafr <- chicagoNMMAPS
threshold <- 27
profvis({
highest_temp <-  c()
record_temp <-  c()
for(i in 1:nrow(datafr)){
highest_temp <- max(highest_temp, datafr$temp[i])
record_temp[i] <- datafr$temp[i] >= threshold & datafr$temp[i] >= highest_temp
}
datafr <- cbind(datafr, record_temp)
})
Human <- function(height,weight,IQ,EQ){
H_list <- list(height = height,weight = weight, IQ = IQ, EQ = EQ)
structure(H_list,class = "Human")
}
Human(186,100,138,50)
Human <- function(height,weight,IQ,EQ){
H_list <- list(height = height,weight = weight, IQ = IQ, EQ = EQ)
structure(H_list,class = "Human")
}
ZhenWei <- Human(186,100,138,50)
ZhenWei
Human <- function(height,weight,IQ,EQ,sex){
stopifnot(sex != "male" & sex!= "female")
H_list <- list(height = height,weight = weight, IQ = IQ, EQ = EQ, sex = sex)
structure(H_list,class = "Human")
}
ZhenWei <- Human(186,100,138,50,"gg")
Human <- function(height,weight,IQ,EQ,sex){
stopifnot(sex == "male" | sex == "female")
H_list <- list(height = height,weight = weight, IQ = IQ, EQ = EQ, sex = sex)
structure(H_list,class = "Human")
}
ZhenWei <- Human(186,100,138,50,"gg")
ZhenWei <- Human(186,100,138,50,"male")
ZhenWei <- Human(186,100,138,50,"male")
Xiang <- Human(182,90,110,60,"male")
Qing <- Human(170,70,138,110,"female")
Qing
ZhenWei <- Human(186,100,138,50,"male")
Xiang <- Human(182,90,110,60,"male")
Qing <- Human(170,70,138,80,"female")
ZhenWei <- Human(186,100,138,50,"male")
Xiang <- Human(182,90,110,55,"male")
Qing <- Human(170,70,138,80,"female")
Loser <- function(human) UseMethod(Loser)
Harvard <- function(human) UseMethod(Harvard)
any(T,T,F)
any(T,F,F)
any(F,F,F)
Loser.Human <- function(human){
BMI = human$weight/(human$height/100)^2
any(human$height < 140 & human$sex == "male",
human$IQ < 80,
human$EQ < 60,
BMI >27
)
}
Loser(Qing)
Loser.Human(Qing)
Loser.Human(Xiang)
Loser.Human(ZhenWei)
Loser <- function(human) UseMethod(Loser)
Loser(Qing)
Harvard.Human <- function(human){
excellence <- .8*human$IQ + .55*human$EQ
excellence > 140
}
Loser(Qing)
Loser(Xiang)
Loser(ZhenWei)
Harvard(Qing)
Harvard(Xiang)
Harvard(ZhenWei)
Loser <- function(human) UseMethod("Loser")
Harvard <- function(human) UseMethod("Harvard")
Loser.Human <- function(human){
BMI = human$weight/(human$height/100)^2
any(human$height < 140 & human$sex == "male",
human$IQ < 88,
human$EQ < 57,
BMI > 27
)
}
Harvard.Human <- function(human){
excellence <- .8*human$IQ + .55*human$EQ
excellence > 140
}
Loser(Qing)
Loser(Xiang)
Loser(ZhenWei)
Harvard(Qing)
Harvard(Xiang)
Harvard(ZhenWei)
Loser(1:10)
ZhenWei
Qing[1]
Qing[[1]]
Loser.default <- function(x){
NA
}
Harvard.default <- function(x){
NA
}
Harvard.Human <- function(human){
excellence <- .8*human$IQ + .55*human$EQ
excellence > 140
}
Loser(Qing)
Loser(Xiang)
Loser(ZhenWei)
Harvard(Qing)
Harvard(Xiang)
Harvard(ZhenWei)
print(Xiang)
print.Human <- function(human){
paste0("A ",ifelse(human$sex == "female",T,F))
}
print.Human <- function(human){
paste0("A ",human$height," cm tall;", human$weight," kg weight ",ifelse(human$sex == "female","woman","man"))
}
print.Human(ZhenWei)
print.Human <- function(human){
paste0("A ",human$height," cm height;", human$weight," kg weighted ",ifelse(human$sex == "female","woman","man"))
}
print.Human(ZhenWei)
ZhenWei
ZhenWei
methods(Loser())
methods(Loser
)
print.Human(ZhenWei)
ZhenWei
ZhenWei
Qing
print.Human <- function(human){
cat(paste0("A ",human$height," cm height;", human$weight," kg weighted ",ifelse(human$sex == "female","woman","man")))
}
print.Human(ZhenWei)
ZhenWei
print.Human(ZhenWei)
ZhenWei
print.Human <- function(human){
cat(paste0("A ",human$height," cm height;\n",
human$weight," kg weighted ",ifelse(human$sex == "female","woman","man"),"\n",
"IQ: ",human$IQ,"\n",
"EQ: ",human$EQ))
}
print.Human(ZhenWei)
print.Human(ZhenWei)
ZhenWei
Xiang
Qing
class(Qing)
class(Xiang)
ZhenWei
Qing
Xiang
summary.Human <- function(human){
summary_obj <- list(Loser = paste0("This guy is ",ifelse(Loser(Human),"","not "),"a loser."),
Harvard = paste0("This guy can",ifelse(Harvard(Human),"","not ")," go Harvard."))
}
summary.Human <- function(human){
summary_obj <- list(Loser = paste0("This guy is ",ifelse(Loser(Human),"","not "),"a loser."),
Harvard = paste0("This guy can",ifelse(Harvard(Human),"","not ")," go Harvard."))
(summary_obj) <- "summary_Human"
summary_obj
}
summary(ZhenWei)
summary.Human <- function(human){
summary_obj <- list(Loser = paste0("This guy is ",ifelse(Loser(Human),"","not "),"a loser."),
Harvard = paste0("This guy can",ifelse(Harvard(Human),"","not ")," go Harvard."))
class(summary_obj) <- "summary_Human"
summary_obj
}
summary(ZhenWei)
Loser(Human)
summary.Human <- function(human){
summary_obj <- list(Loser = paste0("This guy is ",ifelse(Loser(human),"","not "),"a loser."),
Harvard = paste0("This guy can",ifelse(Harvard(human),"","not ")," go Harvard."))
class(summary_obj) <- "summary_Human"
summary_obj
}
summary(ZhenWei)
summary.Human <- function(human){
summary_obj <- list(Loser = paste0("This guy is ",ifelse(Loser(human),"","not "),"a loser."),
Harvard = paste0("This guy can",ifelse(Harvard(human),"","not")," go to Harvard."))
class(summary_obj) <- "summary_Human"
summary_obj
}
summary(ZhenWei)
print.summary_Human <- function(shm){
cat(paste0(shm[[1]],"/n",shm[[2]]))
}
summary(ZhenWei)
print.summary_Human <- function(shm){
cat(paste0(shm[[1]],"\n",shm[[2]]))
}
summary(ZhenWei)
GRanges()
library(GenomicRanges)
GRanges()
summary(GRanges())
print.Human <- function(human){
print(paste0("A ",human$height," cm height;\n",
human$weight," kg weighted ",ifelse(human$sex == "female","woman","man"),"\n",
"IQ: ",human$IQ,"\n",
"EQ: ",human$EQ))
}
ZhenWei
print.Human <- function(human){
cat(paste0("A ",human$height," cm height;\n",
human$weight," kg weighted ",ifelse(human$sex == "female","woman","man"),"\n",
"IQ: ",human$IQ,"\n",
"EQ: ",human$EQ))
}
summary(ZhenWei)
summary(Xiang)
summary(Qing)
summary(ZhenWei)
summary(Xiang)
summary(Qing)
summary(ZhenWei)
summary(Xiang)
summary(Qing)
print.summary_Human <- function(shm){
print(paste0(shm[[1]],"\n",shm[[2]]))
}
summary(ZhenWei)
print.summary_Human <- function(shm){
print(shm[[1]])
print(shm[[2]])
}
summary(ZhenWei)
summary(Xiang)
summary(Qing)
summary.Human <- function(human){
summary_obj <- list(Loser = paste0("This guy is ",ifelse(Loser(human),"","not "),"a loser."),
Harvard = paste0("This guy will ",ifelse(Harvard(human),"","never")," go to Harvard."))
class(summary_obj) <- "summary_Human"
summary_obj
}
print.summary_Human <- function(shm){
print(shm[[1]])
print(shm[[2]])
}
summary(ZhenWei)
summary(Xiang)
summary(Qing)
summary.Human <- function(human){
summary_obj <- list(Loser = paste0("This guy is ",ifelse(Loser(human),"","not "),"a loser."),
Harvard = paste0("This guy will ",ifelse(Harvard(human),"","never "),"go to Harvard."))
class(summary_obj) <- "summary_Human"
summary_obj
}
print.summary_Human <- function(shm){
print(shm[[1]])
print(shm[[2]])
}
summary(ZhenWei)
summary(Xiang)
summary(Qing)
summary.Human <- function(human){
summary_obj <- list(Loser = paste0("This guy is ",ifelse(Loser(human),"","not "),"a loser."),
Harvard = paste0("This guy ",ifelse(Harvard(human),"","will never "),"go to Harvard."))
class(summary_obj) <- "summary_Human"
summary_obj
}
print.summary_Human <- function(shm){
print(shm[[1]])
print(shm[[2]])
}
summary(ZhenWei)
summary(Xiang)
summary(Qing)
setClass("loser",
slots = list(years_of_single = "numeric",
depression = "numeric",
social_anxiety = "numeric",
Frindships_history = "numeric"))
setClass("suicidal person",
slots = list(Suicidal_thought_frequency = "numeric",
Prefered_way2death = "charactor"),
contains = "loser")
setClass("loser",
slots = list(years_of_single = "numeric",
depression = "numeric",
social_anxiety = "numeric",
Frindships_history = "numeric"))
setClass("suicidal person",
slots = list(Suicidal_thought_frequency = "numeric",
Prefered_way2death = "character"),
contains = "loser")
GRanges()
GRanges
new_GRanges
.new_GRanges
.new_GRanges()
Losers <- function(years_of_single,
depression,
social_anxiety,
Friendships_history){
new("loser", years_of_single, depression, social_anxiety, Friendships_history)
}
?GenomicRangesList
?GRanges
Losers(10,100,200,0)
Losers <- function(years_of_single,
depression,
social_anxiety,
Friendships_history){
new("loser", years_of_single, depression, social_anxiety, Friendships_history)
}
Losers(10,100,200,0)
setClass("loser",
slots = list(years_of_single = "numeric",
depression = "numeric",
social_anxiety = "numeric",
Friendships_history = "numeric"))
Losers(10,100,200,0)
Losers <- function(years_of_single,
depression,
social_anxiety,
Friendships_history){
setClass("loser",
slots = list(years_of_single = "numeric",
depression = "numeric",
social_anxiety = "numeric",
Friendships_history = "numeric"))
new("loser", years_of_single, depression, social_anxiety, Friendships_history)
}
Losers(10,100,200,0)
new("loser",10,100,200,0)
Losers <- function(years_of_single,
depression,
social_anxiety,
Friendships_history){
new("loser", years_of_single = years_of_single,
depression = depression,
social_anxiety = social_anxiety,
Friendships_history = Friendships_history)
}
Losers(10,100,200,0)
Losers <- function(years_of_single,
depression,
social_anxiety,
Friendships_history){
setClass("loser",
slots = list(years_of_single = "numeric",
depression = "numeric",
social_anxiety = "numeric",
Friendships_history = "numeric"))
new("loser", years_of_single = years_of_single,
depression = depression,
social_anxiety = social_anxiety,
Friendships_history = Friendships_history)
}
Losers(10,100,200,0)
Suicides <- function(years_of_single,
depression,
social_anxiety,
Friendships_history,
Suicidal_thought_frequency,
Prefered_way2death){
setClass("suicidal person",
slots = list(Suicidal_thought_frequency = "numeric",
Prefered_way2death = "character"),
contains = "loser")
new("suicidal person", years_of_single = years_of_single,
depression = depression,
social_anxiety = social_anxiety,
Friendships_history = Friendships_history,
Suicidal_thought_frequency,
Prefered_way2death
)
}
Suicides(10,100,200,0,100,"hang")
Suicides <- function(years_of_single,
depression,
social_anxiety,
Friendships_history,
Suicidal_thought_frequency,
Prefered_way2death){
setClass("suicidal person",
slots = list(Suicidal_thought_frequency = "numeric",
Prefered_way2death = "character"),
contains = "loser")
new("suicidal person", years_of_single = years_of_single,
depression = depression,
social_anxiety = social_anxiety,
Friendships_history = Friendships_history,
Suicidal_thought_frequency = Suicidal_thought_frequency,
Prefered_way2death = Prefered_way2death
)
}
Suicides(10,100,200,0,100,"hang")
Somebody <- Suicides(10,100,200,0,100,"hang")
Somebody@social_anxiety
setMethod("Life_time",  c(x = "loser"),
(x){ 100 - 15*x@depression - 10*x@social_anxiety + 10*x@Friendships_history
})
setMethod("Life_time",  c(x = "loser"),
function(x){
100 - 15*x@depression - 10*x@social_anxiety + 10*x@Friendships_history
})
setGeneric("Life_time", function(x){("Life_time")})
setMethod("Life_time",  c(x = "loser"),
function(x){
100 - 15*x@depression - 10*x@social_anxiety + 10*x@Friendships_history
})
Life_time(Somebody)
setMethod("print",
(x = "loser"),
function(x){
paste0("This person is a loser suffered from ", x@depression, " degree of depression")
})
Somebody
setMethod("print",
(x = "loser"),
function(x){
paste0("This person is a loser suffered from ", x@depression, " degree of depression")
})
Somebody
Somebody2 <- Losers(10,100,200,0)
Somebody2
setMethod("print",
(x = "loser"),
function(x){
paste0("This person is a loser suffered from ", x@depression, " degree of depression")
})
setMethod("print",
c(x = "loser"),
function(x){
paste0("This person is a loser suffered from ", x@depression, " degree of depression")
})
Somebody2
print(Somebody2)
print(Somebody)
Life_time(Somebody)
knitr::opts_chunk$set(echo = TRUE)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(rtracklayer)
?export
export(TxDb.Hsapiens.UCSC.hg19.knownGene,"hg19.gff","GFF")
export(TxDb.Hsapiens.UCSC.hg19.knownGene,"hg19.gtf","GTF")
gc()
mem_used()
pryr::mem_used()
gc()
pryr::mem_used()
knitr::opts_chunk$set(echo = TRUE)
hg19_svm_DESeq2 <- readRDS("hg19_svm_DESeq2.rds")
mm10_svm_DESeq2 <- readRDS("mm10_svm_DESeq2.rds")
hg19_svm_DESeq2
mm10_svm_DESeq2
rowRanges(hg19_svm_DESeq2)
library(SummarizedExperiment)
rowRanges(hg19_svm_DESeq2)
rowRanges(mm10_svm_DESeq2)
list.files()
SVM_names <- grep("RMbase_posterior",list.files(),value = T)
SVM_names
SVM_gr_lst <- lapply(SVM_names,readRDS)
SVM_gr_lst[[1]]
table(SVM_gr_lst[[1]] %over% rowRanges(hg19_svm_DESeq2))
table(SVM_gr_lst[[2]] %over% rowRanges(hg19_svm_DESeq2))
table(SVM_gr_lst[[3]] %over% rowRanges(hg19_svm_DESeq2))
table(SVM_gr_lst[[4]] %over% rowRanges(hg19_svm_DESeq2))
table(SVM_gr_lst[[5]] %over% rowRanges(hg19_svm_DESeq2))
table(SVM_gr_lst[[2]] %over% SVM_gr_lst[[1]]))
table(SVM_gr_lst[[2]] %over% SVM_gr_lst[[1]])
length(SVM_gr_lst[[1]])
length(reduce(SVM_gr_lst[[1]]))
write.csv( colData( hg19_svm_DESeq2 ) , "coldata_hg19.csv")
write.csv( colData( readRDS("Count_hg19_svm.rds") ) , "coldata_hg19.csv")
knitr::opts_chunk$set(echo = TRUE)
library(RbashGEO)
?meripQC::meRIP_count()
?RbashGEO::Count_SRRs
list.files()
SummarizedExperiment::rowRanges( readRDS("Count_hg19_union_TargetPert.rds") )
saveRDS( SummarizedExperiment::rowRanges( readRDS("Count_hg19_union_TargetPert.rds") ) ,"hg19_union.rds")
